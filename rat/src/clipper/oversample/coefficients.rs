use std::simd::{f32x16, f32x2, f32x4, f32x8};

// These are all minimum phase FIR filters
pub trait Coefficients {
  fn new() -> Self;
}

// fs/4
impl Coefficients for Vec<f32x2> {
  fn new() -> Self {
    vec![
      f32x2::from_array([5.15010541e-02, 2.04142410e-01]),
      f32x2::from_array([3.84479099e-01, 3.97971913e-01]),
      f32x2::from_array([1.62534671e-01, -1.19598927e-01]),
      f32x2::from_array([-1.71273705e-01, -1.06278960e-04]),
      f32x2::from_array([1.20815906e-01, 4.39862653e-02]),
      f32x2::from_array([-7.43535868e-02, -5.45316160e-02]),
      f32x2::from_array([4.04537165e-02, 5.05351788e-02]),
      f32x2::from_array([-1.82019087e-02, -4.09481193e-02]),
      f32x2::from_array([5.04061050e-03, 3.02857436e-02]),
      f32x2::from_array([1.63859732e-03, -2.07742921e-02]),
      f32x2::from_array([-4.11309572e-03, 1.33189690e-02]),
      f32x2::from_array([4.19960556e-03, -8.03690822e-03]),
      f32x2::from_array([-3.21081343e-03, 4.61417492e-03]),
      f32x2::from_array([1.97943874e-03, -2.56472793e-03]),
      f32x2::from_array([-9.40583669e-04, 1.40999712e-03]),
      f32x2::from_array([2.42475111e-04, -7.74257462e-04]),
    ]
  }
}

// fs/8
impl Coefficients for Vec<f32x4> {
  fn new() -> Self {
    vec![
      f32x4::from_array([
        8.67041163e-03,
        2.73441542e-02,
        5.96002767e-02,
        1.03658494e-01,
      ]),
      f32x4::from_array([
        1.52036012e-01,
        1.92371108e-01,
        2.10885083e-01,
        1.97511980e-01,
      ]),
      f32x4::from_array([
        1.50688099e-01,
        7.95393197e-02,
        2.03364476e-03,
        -6.07277270e-02,
      ]),
      f32x4::from_array([
        -9.20437428e-02,
        -8.59420819e-02,
        -4.95139316e-02,
        -5.27817114e-05,
      ]),
      f32x4::from_array([
        4.19231925e-02,
        6.08553579e-02,
        5.20070960e-02,
        2.25424913e-02,
      ]),
      f32x4::from_array([
        -1.25072724e-02,
        -3.73755836e-02,
        -4.24746039e-02,
        -2.80155526e-02,
      ]),
      f32x4::from_array([
        -2.90703008e-03,
        2.01645690e-02,
        3.09395326e-02,
        2.60340728e-02,
      ]),
      f32x4::from_array([
        9.74729456e-03,
        -8.84253229e-03,
        -2.07113285e-02,
        -2.11694261e-02,
      ]),
      f32x4::from_array([
        -1.15618734e-02,
        2.13594720e-03,
        1.27907619e-02,
        1.57260357e-02,
      ]),
      f32x4::from_array([
        1.06660487e-02,
        1.26502490e-03,
        -7.24086157e-03,
        -1.08442048e-02,
      ]),
      f32x4::from_array([
        -8.57133615e-03,
        -2.50834990e-03,
        3.71705395e-03,
        6.99463139e-03,
      ]),
      f32x4::from_array([
        6.21970928e-03,
        2.51481049e-03,
        -1.71934240e-03,
        -4.25007884e-03,
      ]),
      f32x4::from_array([
        -4.13142036e-03,
        -1.95477860e-03,
        7.41518999e-04,
        2.46090805e-03,
      ]),
      f32x4::from_array([
        2.52124489e-03,
        1.26101200e-03,
        -3.55993503e-04,
        -1.38445688e-03,
      ]),
      f32x4::from_array([
        -1.40982134e-03,
        -6.62737248e-04,
        2.51788019e-04,
        7.77265963e-04,
      ]),
      f32x4::from_array([
        7.12179923e-04,
        2.44987617e-04,
        -2.41221415e-04,
        -4.44813676e-04,
      ]),
    ]
  }
}

// fs/16
impl Coefficients for Vec<f32x8> {
  fn new() -> Self {
    vec![
      f32x8::from_array([
        3.05683748e-03,
        5.99937168e-03,
        1.06028007e-02,
        1.68909967e-02,
        2.49143583e-02,
        3.45767815e-02,
        4.56017757e-02,
        5.75237090e-02,
      ]),
      f32x8::from_array([
        6.96992197e-02,
        8.13403038e-02,
        9.15713435e-02,
        9.95017920e-02,
        1.04310832e-01,
        1.05335100e-01,
        1.02149418e-01,
        9.46310581e-02,
      ]),
      f32x8::from_array([
        8.29997200e-02,
        6.78233970e-02,
        4.99902315e-02,
        3.06468090e-02,
        1.11049900e-02,
        -7.27227497e-03,
        -2.31968401e-02,
        -3.55781696e-02,
      ]),
      f32x8::from_array([
        -4.36295408e-02,
        -4.69472918e-02,
        -4.55514676e-02,
        -3.98840721e-02,
        -3.07643429e-02,
        -1.93041983e-02,
        -6.79210963e-03,
        5.44047457e-03,
      ]),
      f32x8::from_array([
        1.61541830e-02,
        2.43287362e-02,
        2.92621623e-02,
        3.06324636e-02,
        2.85187042e-02,
        2.33759601e-02,
        1.59689456e-02,
        7.27227126e-03,
      ]),
      f32x8::from_array([
        -1.64546686e-03,
        -9.75241611e-03,
        -1.61637952e-02,
        -2.02450530e-02,
        -2.16642345e-02,
        -2.04255724e-02,
        -1.68426686e-02,
        -1.14914993e-02,
      ]),
      f32x8::from_array([
        -5.12613050e-03,
        1.42391629e-03,
        7.35262471e-03,
        1.19806534e-02,
        1.48270928e-02,
        1.56579966e-02,
        1.45047585e-02,
        1.16398272e-02,
      ]),
      f32x8::from_array([
        7.53074665e-03,
        2.77346257e-03,
        -1.99465439e-03,
        -6.17582934e-03,
        -9.28322895e-03,
        -1.09993006e-02,
        -1.12039004e-02,
        -9.97544865e-03,
      ]),
      f32x8::from_array([
        -7.57141687e-03,
        -4.38323319e-03,
        -8.74169287e-04,
        2.48235835e-03,
        5.26452398e-03,
        7.15720721e-03,
        7.98260139e-03,
        7.71282515e-03,
      ]),
      f32x8::from_array([
        6.46700193e-03,
        4.48362701e-03,
        2.07858735e-03,
        -4.00892927e-04,
        -2.62293761e-03,
        -4.31597692e-03,
        -5.30052332e-03,
        -5.50414862e-03,
      ]),
      f32x8::from_array([
        -4.96543740e-03,
        -3.81893707e-03,
        -2.27027588e-03,
        -5.59651913e-04,
        1.06974656e-03,
        2.40678580e-03,
        3.29680883e-03,
        3.66180051e-03,
      ]),
      f32x8::from_array([
        3.50047426e-03,
        2.88353165e-03,
        1.93857165e-03,
        8.25438718e-04,
        -2.86709125e-04,
        -1.24603710e-03,
        -1.93519796e-03,
        -2.28659326e-03,
      ]),
      f32x8::from_array([
        -2.28645658e-03,
        -1.97129244e-03,
        -1.41808643e-03,
        -7.28660725e-04,
        -1.56015614e-05,
        6.16798259e-04,
        1.08909922e-03,
        1.35209729e-03,
      ]),
      f32x8::from_array([
        1.39142422e-03,
        1.22747235e-03,
        9.07487751e-04,
        4.96544956e-04,
        6.55773336e-05,
        -3.19664519e-04,
        -6.07374418e-04,
        -7.67122044e-04,
      ]),
      f32x8::from_array([
        -7.91196154e-04,
        -6.92930559e-04,
        -5.03188953e-04,
        -2.63048166e-04,
        -1.59529990e-05,
        1.98884086e-04,
        3.51412601e-04,
        4.26129487e-04,
      ]),
      f32x8::from_array([
        4.21537346e-04,
        3.47831370e-04,
        2.27753902e-04,
        8.74180238e-05,
        -4.71760332e-05,
        -1.54028214e-04,
        -2.18058383e-04,
        -2.34728999e-04,
      ]),
    ]
  }
}

// fs/32
impl Coefficients for Vec<f32x16> {
  fn new() -> Self {
    vec![
      f32x16::from_array([
        1.53208166e-03,
        1.91646924e-03,
        2.68717963e-03,
        3.66555031e-03,
        4.84635081e-03,
        6.23616248e-03,
        7.84120612e-03,
        9.66419884e-03,
        1.17034143e-02,
        1.39524181e-02,
        1.63987697e-02,
        1.90244515e-02,
        2.18052896e-02,
        2.47113700e-02,
        2.77069296e-02,
        3.07504710e-02,
      ]),
      f32x16::from_array([
        3.37959400e-02,
        3.67934504e-02,
        3.96897439e-02,
        4.24295059e-02,
        4.49563381e-02,
        4.72144390e-02,
        4.91496331e-02,
        5.07105735e-02,
        5.18505139e-02,
        5.25285437e-02,
        5.27109573e-02,
        5.23719384e-02,
        5.14951194e-02,
        5.00743354e-02,
        4.81140181e-02,
        4.56293215e-02,
      ]),
      f32x16::from_array([
        4.26465015e-02,
        3.92027139e-02,
        3.53458739e-02,
        3.11328276e-02,
        2.66294213e-02,
        2.19087962e-02,
        1.70501697e-02,
        1.21364140e-02,
        7.25319920e-03,
        2.48553817e-03,
        -2.08140100e-03,
        -6.36849767e-03,
        -1.02996235e-02,
        -1.38081567e-02,
        -1.68349779e-02,
        -1.93320722e-02,
      ]),
      f32x16::from_array([
        -2.12639157e-02,
        -2.26060140e-02,
        -2.33482828e-02,
        -2.34942711e-02,
        -2.30602215e-02,
        -2.20764792e-02,
        -2.05845706e-02,
        -1.86373125e-02,
        -1.62982874e-02,
        -1.36382906e-02,
        -1.07345053e-02,
        -7.66906949e-03,
        -4.52582650e-03,
        -1.38843287e-03,
        1.66142414e-03,
        4.54616788e-03,
      ]),
      f32x16::from_array([
        7.19486486e-03,
        9.54448235e-03,
        1.15413006e-02,
        1.31429285e-02,
        1.43182619e-02,
        1.50486760e-02,
        1.53285001e-02,
        1.51647734e-02,
        1.45760418e-02,
        1.35925688e-02,
        1.22551336e-02,
        1.06133446e-02,
        8.72346953e-03,
        6.64798073e-03,
        4.45283302e-03,
        2.20575002e-03,
      ]),
      f32x16::from_array([
        -2.65437204e-05,
        -2.17911704e-03,
        -4.19120935e-03,
        -6.00765847e-03,
        -7.58167781e-03,
        -8.87368481e-03,
        -9.85448927e-03,
        -1.05042604e-02,
        -1.08144273e-02,
        -1.07866366e-02,
        -1.04320757e-02,
        -9.77238315e-03,
        -8.83744709e-03,
        -7.66450565e-03,
        -6.29701966e-03,
        -4.78288624e-03,
      ]),
      f32x16::from_array([
        -3.17393730e-03,
        -1.52269693e-03,
        1.18812824e-04,
        1.69975366e-03,
        3.17309545e-03,
        4.49625403e-03,
        5.63296619e-03,
        6.55431201e-03,
        7.23797309e-03,
        7.67013660e-03,
        7.84574328e-03,
        7.76773738e-03,
        7.44712204e-03,
        6.90183862e-03,
        6.15692875e-03,
        5.24276565e-03,
      ]),
      f32x16::from_array([
        4.19423331e-03,
        3.04895186e-03,
        1.84693647e-03,
        6.28709465e-04,
        -5.65982546e-04,
        -1.69986289e-03,
        -2.73827601e-03,
        -3.65111870e-03,
        -4.41317047e-03,
        -5.00523438e-03,
        -5.41389062e-03,
        -5.63240295e-03,
        -5.66018929e-03,
        -5.50330941e-03,
        -5.17324881e-03,
        -4.68707946e-03,
      ]),
      f32x16::from_array([
        -4.06607952e-03,
        -3.33601686e-03,
        -2.52445142e-03,
        -1.66055656e-03,
        -7.75047377e-04,
        1.02084617e-04,
        9.42047139e-04,
        1.71865062e-03,
        2.40881637e-03,
        2.99251884e-03,
        3.45465867e-03,
        3.78453843e-03,
        3.97602271e-03,
        4.02818734e-03,
        3.94441352e-03,
        3.73303870e-03,
      ]),
      f32x16::from_array([
        3.40610024e-03,
        2.97871842e-03,
        2.46952422e-03,
        1.89870057e-03,
        1.28781344e-03,
        6.59102911e-04,
        3.42247094e-05,
        -5.65234854e-04,
        -1.12049940e-03,
        -1.61452067e-03,
        -2.03333056e-03,
        -2.36564897e-03,
        -2.60373747e-03,
        -2.74318542e-03,
        -2.78378400e-03,
        -2.72823441e-03,
      ]),
      f32x16::from_array([
        -2.58261194e-03,
        -2.35571558e-03,
        -2.05896735e-03,
        -1.70511118e-03,
        -1.30889665e-03,
        -8.86193578e-04,
        -4.52895971e-04,
        -2.39763535e-05,
        3.85901323e-04,
        7.63490377e-04,
        1.09698316e-03,
        1.37684475e-03,
        1.59576452e-03,
        1.74909104e-03,
        1.83463362e-03,
        1.85251994e-03,
      ]),
      f32x16::from_array([
        1.80550669e-03,
        1.69781357e-03,
        1.53603911e-03,
        1.32914872e-03,
        1.08638911e-03,
        8.17994979e-04,
        5.34571501e-04,
        2.46507167e-04,
        -3.50143308e-05,
        -3.00468446e-04,
        -5.41518356e-04,
        -7.50552710e-04,
        -9.22198172e-04,
        -1.05195847e-03,
        -1.13722365e-03,
        -1.17753341e-03,
      ]),
      f32x16::from_array([
        -1.17327048e-03,
        -1.12794307e-03,
        -1.04454634e-03,
        -9.28451621e-04,
        -7.85198948e-04,
        -6.21965395e-04,
        -4.45847567e-04,
        -2.63821792e-04,
        -8.24000397e-05,
        9.13670719e-05,
        2.51367483e-04,
        3.92476024e-04,
        5.11134257e-04,
        6.04176228e-04,
        6.69173292e-04,
        7.05216637e-04,
      ]),
      f32x16::from_array([
        7.13196021e-04,
        6.94532941e-04,
        6.51132908e-04,
        5.85835834e-04,
        5.02946859e-04,
        4.06772538e-04,
        3.01315047e-04,
        1.90902500e-04,
        8.05835161e-05,
        -2.50133112e-05,
        -1.22925048e-04,
        -2.10022937e-04,
        -2.82873276e-04,
        -3.39676246e-04,
        -3.79919418e-04,
        -4.02719388e-04,
      ]),
      f32x16::from_array([
        -4.07675028e-04,
        -3.96532020e-04,
        -3.71171929e-04,
        -3.32253190e-04,
        -2.83040564e-04,
        -2.26534136e-04,
        -1.64173219e-04,
        -1.00292183e-04,
        -3.73129610e-05,
        2.38618655e-05,
        7.80504216e-05,
        1.26319339e-04,
        1.64774557e-04,
        1.94268673e-04,
        2.13144310e-04,
        2.21693456e-04,
      ]),
      f32x16::from_array([
        2.20207096e-04,
        2.09559083e-04,
        1.90672891e-04,
        1.65022280e-04,
        1.34091236e-04,
        9.98405996e-05,
        6.37282764e-05,
        2.74273053e-05,
        -7.28401153e-06,
        -3.89504994e-05,
        -6.64797014e-05,
        -8.89717319e-05,
        -1.05741824e-04,
        -1.16240609e-04,
        -1.20595039e-04,
        -1.19069000e-04,
      ]),
    ]
  }
}
